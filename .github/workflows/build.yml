# GitHub Action 的名称
name: Build TpaGui Plugin

# 定义触发工作流程的事件
on:
  # 当有代码推送到 main 或 master 分支时触发
  push:
    branches: [ "main", "master" ]
  # 允许你从 "Actions" 标签页手动触发此工作流程
  workflow_dispatch:

# 定义工作流程中要运行的任务
jobs:
  build:
    # 指定任务运行在最新的 Ubuntu 虚拟环境上
    runs-on: ubuntu-latest

    # 定义任务的步骤
    steps:
      # 第一步：检出（下载）你的仓库代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第二步：设置 Java 环境。现代插件开发通常使用 Java 17。
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven' # 自动缓存 Maven 依赖

      # 第三步：使用 Maven 进行编译和打包
      # 'mvn -B package' 是标准的 Maven 命令，-B 代表 "batch mode" 适合在自动化脚本中运行
      - name: Build with Maven
        run: mvn -B package

      # 第四步：上传构建产物（编译好的 .jar 文件）
      # 这样你就可以在工作流程运行结束后下载它了
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          # 构建产物的名称，可以自定义
          name: TpaGui-Plugin
          # 要上传的文件的路径
          path: target/*.jar
